CODEPOINT

TO-DO

General
  - Modify menu.sh to first see if there have been any changes on handy.js before pushing code to remote repository
  - Set permission correctly for access to content
  - create ringers and post content under their names
  - Reach out to people to borrow their audiences. send interview questions to myeloma patients and caregivers and post their responses
  - modify sublime text defaults - tab size 2 spaces, matching brackets, etc

Documentation
  - explain how to add CSRF protection to forms
  - explain difference between createNewContType, createNewInstance, etc
  - explain how to theme handyjs routes i.e. modify layout.jade, header.jade and footer.html


Deployment
  - figure out why hotmail does not accept email from server

Tests
  - write static tests i.e. tests for the APIs but not for the UI (takes too long and are too fragile)

Cache
  - Cache category display (if needed)
  - Cache findContent

Permissions system 
 - write forms to assign or unassign roles to users

General
  - change permalink structure to <content_type>/path <==> content/id (as opposed to <content_type>/id)
  - '/administration' - provide links to all admin activity (configuration, permissions, etc)
  - replace all double array comparison searches with _.findWhere or _.where

CODE SAMPLES
 - content editing form routing
 - form validation
 - define new content types
 - express subclassing
 - send email based on templates


DONE List
General
  - set up email server to send and receive email 
  - change spaces to dashes not plus
  - Add FAQ and Q&A page
  - fix wonky system message display on some pages (welcomepage is good)
  - harmonize layout between handy and djlist (there should be a programatic way to do this)
  - figure out how to handle 'view content' permission. i.e. unauthenticated users
  - Integrate Mandrill for transactional emails
  - Themeing
  - Update page headers (meta-description)
  - favicon for myelomalist.com (double M, ie MM or big M superimposed over little m)

SEO
  - add meta-tags
    - description
    - rel canonical (use absolute paths, should be same as in sitemap)

Tip page
  - edit form - DONE
  - delete form - DONE
  - add comment form DONE
  - add previous comments DONE

Question
  - edit question (/question/:id/edit) - DONE
  - delete question (/question/:id/delete) - DONE
  - ask question (/ask) DONE
  - answer questions (/question/:id) DONE
  - show answers to question (/question/:id) DONE
  - display all questions (all / unanswered) (/qanda) DONE
  - mark question as answered DONE
  - Add "ask question" button to pages DONE
  - Add menu DONE

Logging
  - user activity (login, logout, registration, password reset, account cancellation) DONE
  - content activity (viewing, creation, deletion, publishing) DONE
  - errors (system errors and exceptions, ) DONE
  - system (cron activity, email sent, backups, XML sitemap submission, ) DONE
  - reports (daily email of activity reports - questions asked/answered, new tips, comments, signups, logins) DONE

Front page
  - display latest tips
  - add category hierachy to each tip
  - add comment count to each tip

Category page
  - display latest category tip
  - add category hierachy to top of page
  - add comment count to each tip
DJlist: Add warning to use common sense (dismissable by cookie)
Set message for unverified users
Free up '/' path
Restore roles of user upon login
Create permissions for 'verified' users
Backup database
contact forms
Add Google Analytics events to forms
Make video
Place forms in separate folder under views (DONE)
User roles (admin user, auth user)
Create content (tips and comments)
User authentication
Access permissons
persistent sessions (with redis)
logout
site configuration
token replacement
send email
request email verification page - when user calls this page, it sends them an email verification link
one time login page (leads to user choosing a new password)
password change
User registration should check if the account already exists
user profile
account cancellation
all forms should call the validation middleware
clean urls
XML Sitemap
Content caching
Chron jobs
Google analytics integration
Ability to define new content types in project extensions 
  - create tables, update initialObjectList & resourcePermissionList
  - ensure new content types have unique names
  - create list of reserved content types
  - create list of reserved database table column names
Proper 403 page
Proper 404 page
 - add roles 'authenticated' and 'unauthenticated' so they can be managed by checkPermissions (not sure if I should do this)

User
  - change user routes to /user/x, /user/x/edit, /user/x/cancel DONE

NOTES:
Default Config object in bootstrap
 - resourcePermissonList contains the list of resources and also the permissions that may be granted to access those resources.  Each time a new resource is created, this list needs to be updated
 - rolesPermissionGrant contains the list of roles and the permissions granted to each role on each resource.  Anytime a new role is created, this list needs to be updated
 
Closures in middleware validation - There is a very subtle issue when closures are used in the middleware validation 
for routes.  Basically, the outer function gets run once (at start up) and any variables within the scope of the 
outer function are set at that time and will not change as long as the server runs.  The only variables that can
change are those modified by the inner function.  In the example below, once the server starts, the value of a is set
and can never change.

app.get('/route1', runEachTime(someVar), function(req, res){})
function runEachTime(aVar){
  var a = aVar
  return function inner(req, res, next){
    doSomethingWithA(a)
  }
}

Changing the sitename will affect the name of the log files created.  Not sure if changing the site name will break the logging or reporting functionality

After installation
add cron url to crontab for desired frequency
